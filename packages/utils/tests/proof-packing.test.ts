import { packGroth16Proof, unpackGroth16Proof, packPlonkProof, unpackPlonkProof } from "../src/proof-packing"
import { PackedGroth16Proof, PackedPlonkProof } from "../src/types"

describe("Packing", () => {
    describe("# packGroth16Proof/unpackGroth16Proof", () => {
        it("Should return a packed proof", async () => {
            const packedGroth16Proof: PackedGroth16Proof = [
                "17455271319858434926499425298909035958151998411844026248469741053531717339265",
                "1809640036543354632013745302316626518616523187165817131215850368558792945688",
                "10412520870708905678204104934659225353238049211955054582580393588023887103880",
                "14387711194338264772134518585903894086292145110571258428309451069689177771358",
                "12307829496191548911018295360088625722009064391654440053843981662837679609522",
                "1074015954757675925234943284833359999770015015487488325909311565628458071018",
                "14707416138790909353926802249502541593845488564118694583832847440405336745095",
                "17279707263918322800069730194548839248077368939211596384106376344385089451889"
            ]

            const originalProof = unpackGroth16Proof(packedGroth16Proof)
            const proof = packGroth16Proof(originalProof)

            expect(proof).toStrictEqual(packedGroth16Proof)
        })
    })
    describe("# packPlonkProof/unpackPlonkProof", () => {
        it("Should return a packed proof", async () => {
            const packedPlonkProof: PackedPlonkProof = [
                "17914361786893394318982178327604414487864513237056915545741685237955889898758",
                "11623678700268860009482923715035459042669946038825310115389937764857895762931",
                "15183825515511366507838837496786852637607254805150329248894565109959907041607",
                "6384410203167849554366253171655179047148567136702235378402837164630240640816",
                "9202353012348632516937872661527360547589593126751457908810087628014112029134",
                "3856510981486753189755963891308849927915289745498535427255110651920157034333",
                "8857530310471250868979138942335422848789372900703293993982690831345609225207",
                "3938623725840069183402182311101487143381051178696950764400612993570202710114",
                "7274160754471323581688637706437837593137641713475415550950980799259910627931",
                "8481659106652620898806192579677288501499985015198022684075469967486516586780",
                "8786550698510458700317432695469504868602653863084340044798795737372215446818",
                "7492326926845667264184367952020930665204964184441033993353060690445463206616",
                "20816764370631550710758335453748595129845667132066176851540348998628428493209",
                "18369993778550129064629065852184448683458076922207016808209583243426705578396",
                "18589100892351157548465200438491808008131076150551497129161554683614551562403",
                "6294502741092364932381094172507007243043069221656914691711929327473193372087",
                "12584546575160595932425416688056778459808112667580737992854894629719827822946",
                "7928617675237759528801829769610663950046768975423648885077766978499715265673",
                "18926004627755475420132310972453414257989487010321515069907064064376414410579",
                "8250751516956054281463102393633017354440176242206011809710895917756400025919",
                "12265069258677155383369512364203023194654315270322979208062685583289079011320",
                "6468950565289778342204472130869355090000867291543268010636405421702605489062",
                "11478623457916856711955390197413653586906539117792525204126865409293124140652",
                "17164909676076103008334200046696080322145968674322231088206130702941832566115"
            ]

            const originalProof = unpackPlonkProof(packedPlonkProof)
            const proof = packPlonkProof(originalProof)

            expect(proof).toStrictEqual(packedPlonkProof)
        })
    })
})
